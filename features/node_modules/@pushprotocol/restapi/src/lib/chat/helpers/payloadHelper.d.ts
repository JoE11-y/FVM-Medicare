import { IConnectedUser } from '../../types';
export interface ISendMessagePayload {
    fromDID: string;
    toDID: string;
    fromCAIP10: string;
    toCAIP10: string;
    messageContent: string;
    messageType: string;
    signature: string;
    encType: string;
    encryptedSecret: string;
    sigType: string;
}
export interface IApproveRequestPayload {
    fromDID: string;
    toDID: string;
    signature: string;
    status: 'Approved';
    sigType: string;
}
export declare const sendMessagePayload: (receiverAddress: string, senderCreatedUser: IConnectedUser, messageContent: string, messageType: string, env: string) => Promise<ISendMessagePayload>;
export declare const approveRequestPayload: (senderAddress: string, account: string, status: 'Approved') => IApproveRequestPayload;
